import{_ as e,c as s,o as n,ah as i}from"./chunks/framework.ByubJJ5I.js";const g=JSON.parse('{"title":"Git 提交信息规范（Angular）","description":"","frontmatter":{"title":"Git 提交信息规范（Angular）","date":"2025-02-13T09:57:48.000Z","lastmod":"2025-02-13T09:58:02.000Z","tags":["Git","开发","规范"]},"headers":[],"relativePath":"content/git-angular-commits-specification.md","filePath":"content/git-angular-commits-specification.md"}'),t={name:"content/git-angular-commits-specification.md"};function l(o,a,c,p,d,r){return n(),s("div",null,[...a[0]||(a[0]=[i(`<h1 id="git-提交信息规范-angular" tabindex="-1">Git 提交信息规范（Angular） <a class="header-anchor" href="#git-提交信息规范-angular" aria-label="Permalink to “Git 提交信息规范（Angular）”">​</a></h1><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to “参考资料”">​</a></h2><ul><li><a href="https://zjdoc-gitguide.readthedocs.io/zh_CN/latest/message/angular-commit.html" target="_blank" rel="noreferrer">Angular 提交规范 - GitGuide</a></li><li><a href="https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines" target="_blank" rel="noreferrer">Angular Commit Message Guidelines</a></li></ul><h2 id="提交格式" tabindex="-1">提交格式 <a class="header-anchor" href="#提交格式" aria-label="Permalink to “提交格式”">​</a></h2><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span></span>
<span class="line"><span>&lt;blank line&gt;</span></span>
<span class="line"><span>&lt;body&gt;</span></span>
<span class="line"><span>&lt;blank line&gt;</span></span>
<span class="line"><span>&lt;footer&gt;</span></span></code></pre></div><p>提交信息中可以包含页眉（<code>header</code>​）、正文（<code>body</code>​）和页脚（<code>footer</code>​），<strong>页眉内容为必须</strong>，每次提交的信息不超过 <code>100</code>​ 个字符。<br> 页眉中包含提交类型（<code>type</code>​）、作用域（<code>scope</code>​，可选）和主题（<code>subject</code>）。</p><h2 id="提交类型" tabindex="-1">提交类型 <a class="header-anchor" href="#提交类型" aria-label="Permalink to “提交类型”">​</a></h2><p>提交类型为下面其中一个：</p><ol><li>​<code>build</code>：对构建系统或者外部依赖项进行了修改</li><li>​<code>ci</code>：对CI配置文件或脚本进行了修改</li><li>​<code>docs</code>：对文档进行了修改</li><li>​<code>feat</code>：增加新的功能</li><li>​<code>fix</code>​：修复 <code>bug</code></li><li>​<code>pref</code>：提高性能的代码更改</li><li>​<code>refactor</code>​：既不是修复 <code>bug</code> 也不是添加功能的代码重构</li><li>​<code>style</code>：不影响代码含义的修改，例如空格、格式化、缺失的分号等</li><li>​<code>test</code>：增加确实的测试或者矫正已存在的测试</li></ol><h2 id="作用域" tabindex="-1">作用域 <a class="header-anchor" href="#作用域" aria-label="Permalink to “作用域”">​</a></h2><p>作用域可以是任何指定提交更改位置的内容。</p><h2 id="主题" tabindex="-1">主题 <a class="header-anchor" href="#主题" aria-label="Permalink to “主题”">​</a></h2><p>主题包括了对本次修改的简洁描述，有以下准则：</p><ol><li>使用命令式，使用现在时态：“改变”而不是“已改变”也不是“改变了”</li><li>不要大写首字母</li><li>不在末尾添加句号</li></ol><h2 id="正文" tabindex="-1">正文 <a class="header-anchor" href="#正文" aria-label="Permalink to “正文”">​</a></h2><p>和主题设置类似，使用命令式、现在时态，应该包含修改的动机以及和之前行为的对比。</p><h2 id="页脚" tabindex="-1">页脚 <a class="header-anchor" href="#页脚" aria-label="Permalink to “页脚”">​</a></h2><h3 id="breaking-changes" tabindex="-1">Breaking changes <a class="header-anchor" href="#breaking-changes" aria-label="Permalink to “Breaking changes”">​</a></h3><p>不兼容修改指的是本次提交修改了不兼容之前版本的 <code>API</code> 或者环境变量</p><p>所有不兼容修改都必须在页脚中作为中断更改块提到，以 <code>BREAKING CHANGE: </code> 开头，后跟一个空格或者两个换行符，其余的信息就是对此次修改的描述，修改的理由和修改注释</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>BREAKING CHANGE: isolate scope bindings definition has changed and the inject option for the directive controller injection was removed.</span></span>
<span class="line"><span></span></span>
<span class="line"><span>To migrate the code follow the example below:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Before:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>After:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>...</span></span>
<span class="line"><span>...</span></span>
<span class="line"><span></span></span>
<span class="line"><span>The removed \`inject\` wasn&#39;t generaly useful for directives so there should be no code using it.</span></span></code></pre></div><h3 id="引用提交的问题" tabindex="-1">引用提交的问题 <a class="header-anchor" href="#引用提交的问题" aria-label="Permalink to “引用提交的问题”">​</a></h3><p>如果本次提交目的是修改 <code>issue</code>​ 的话，需要在页脚引用该 <code>issue</code></p><p>以关键字 <code>Closes</code> 开头，例如</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>Closes #234</span></span></code></pre></div><p>如果修改了多个 <code>bug</code>，以逗号隔开</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>Closes #123, #245, #992</span></span></code></pre></div><h2 id="回滚设置" tabindex="-1">回滚设置 <a class="header-anchor" href="#回滚设置" aria-label="Permalink to “回滚设置”">​</a></h2><p>当此次提交包含回滚（<code>revert</code>​）操作，那么页眉以 <code>&quot;revert:&quot;</code>​ 开头，同时在正文中添加 <code>&quot;This reverts commit hash&quot;</code>​，其中 <code>hash</code> 值表示被回滚前的提交</p><div class="language-text"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>revert:&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;</span></span>
<span class="line"><span>&lt;BLANK LINE&gt;</span></span>
<span class="line"><span>This reverts commit hash</span></span>
<span class="line"><span>&lt;other-body&gt;</span></span>
<span class="line"><span>&lt;BLANK LINE&gt;</span></span>
<span class="line"><span>&lt;footer&gt;</span></span></code></pre></div><p>‍</p>`,31)])])}const b=e(t,[["render",l]]);export{g as __pageData,b as default};
