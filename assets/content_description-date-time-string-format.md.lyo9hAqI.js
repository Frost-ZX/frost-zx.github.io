import{_ as e,c as s,o as a,ah as l}from"./chunks/framework.DZmKp_jX.js";const f=JSON.parse('{"title":"包含 T 和 Z 的日期时间字符串格式","description":"","frontmatter":{"title":"包含 T 和 Z 的日期时间字符串格式","date":"2025-03-15T23:11:02.000Z","lastmod":"2025-03-15T23:11:27.000Z","tags":["格式","时间","日期"]},"headers":[],"relativePath":"content/description-date-time-string-format.md","filePath":"content/description-date-time-string-format.md"}'),i={name:"content/description-date-time-string-format.md"};function d(n,t,r,o,p,c){return a(),s("div",null,[...t[0]||(t[0]=[l(`<h1 id="包含-t-和-z-的日期时间字符串格式" tabindex="-1">包含 T 和 Z 的日期时间字符串格式 <a class="header-anchor" href="#包含-t-和-z-的日期时间字符串格式" aria-label="Permalink to “包含 T 和 Z 的日期时间字符串格式”">​</a></h1><p>ECMAScript 基于 ISO 8601 扩展格式的简化定义了日期时间的字符串交换格式。</p><p>格式为：<code>YYYY-MM-DDTHH:mm:ss.sssZ</code>​</p><table tabindex="0"><thead><tr><th style="text-align:left;">内容</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">YYYY</td><td style="text-align:left;">公历中 0000 到 9999 年的十进制数字。</td></tr><tr><td style="text-align:left;">-</td><td style="text-align:left;">“-”（连字符）在字符串中出现两次，分隔年、月、日。</td></tr><tr><td style="text-align:left;">MM</td><td style="text-align:left;">一年中的月份，从 01（一月）到 12（十二月）。</td></tr><tr><td style="text-align:left;">DD</td><td style="text-align:left;">月份中的天数，从 01（第一天）到 31（最后一天）。</td></tr><tr><td style="text-align:left;">T</td><td style="text-align:left;">表示字符串中的时间部分的开始。</td></tr><tr><td style="text-align:left;">HH</td><td style="text-align:left;">自午夜以来经过的完整小时数，从 00 到 24 的两位十进制数字。</td></tr><tr><td style="text-align:left;">:</td><td style="text-align:left;">“:”（冒号）在字符串中出现两次，分隔时、分、秒。</td></tr><tr><td style="text-align:left;">mm</td><td style="text-align:left;">当前小时经过的完整分钟数，从 00 到 59 的两位十进制数字。</td></tr><tr><td style="text-align:left;">ss</td><td style="text-align:left;">当前分钟经过的完整秒数，从 00 到 59 的两位十进制数字。</td></tr><tr><td style="text-align:left;">.</td><td style="text-align:left;">“.”（点）在字符串中出现一次，分隔秒、毫秒。</td></tr><tr><td style="text-align:left;">sss</td><td style="text-align:left;">当前秒经过的完整毫秒数，从 000 到 999 的三位十进制数字。</td></tr><tr><td style="text-align:left;">Z</td><td style="text-align:left;">时区，使用 “Z” 表示 UTC，或使用 “+”、“-”，并在后方跟随 HH:mm</td></tr><tr><td style="text-align:left;"></td><td style="text-align:left;">格式的时间表达式表示偏移量（例如 <code>+0800</code> 表示 +8 小时）。</td></tr></tbody></table><p>所有数字必须为<strong>十进制</strong>形式。</p><p>如果 <code>MM</code> 或 <code>DD</code> 字段不存在，则使用默认值 “01”。</p><p>如果 <code>HH</code>、<code>mm</code> 或 <code>ss</code> 字段不存在，则使用默认值 “00”。</p><p>若 <code>sss</code> 字段不存在，则使用默认值 “000”。</p><p>如果没有指定时区，则把字符串作为<strong>本地时间</strong>进行解析。</p><p>由于每天都以午夜开始和结束，所以可以在时间表达式中使用 <code>00:00</code> 和 <code>24:00</code> 来区分相同时间点的两个午夜。<br> 也就是说，字符串 <code>1995-02-04T24:00</code> 和 <code>1995-02-05T00:00</code> 可以表示完全相同的时间点。</p><p>字符串中可以只包含日期：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>YYYY</span></span>
<span class="line"><span>YYYY-MM</span></span>
<span class="line"><span>YYYY-MM-DD</span></span></code></pre></div><p>字符串中可以只包含时间：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span>THH:mm</span></span>
<span class="line"><span>THH:mm:ss</span></span>
<span class="line"><span>THH:mm:ss.sss</span></span></code></pre></div><p>参考资料：</p><ul><li><a href="https://262.ecma-international.org/6.0/#sec-date-time-string-format" target="_blank" rel="noreferrer">ECMAScript 2015 Language Specification – Date Time String Format</a></li><li><a href="https://datatracker.ietf.org/doc/html/rfc2822#section-3.3" target="_blank" rel="noreferrer">rfc2822 - Date and Time Specification</a></li></ul><p>‍</p>`,17)])])}const h=e(i,[["render",d]]);export{f as __pageData,h as default};
